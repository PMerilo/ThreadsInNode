<div class="d-flex justify-content-center" style="height: calc(70vh); ">
    <div class="shadow-sm d-flex flex-column rounded border col-10" style="height:100%;">
        <div class="p-3 overflow-auto" style="height:100%;">
            <div class="flex-grow-1 overflow-auto" id="chat-panel">
                
            </div>
        </div>
        <div class="border-top">
            <div class="message-box p-3">
                <div id="chat-box">
                    <form id="chat-form" class="d-flex" data-bs-name="{{user.name}}">
                        <input id="msg" class="flex-grow-1 form-control" type="text" placeholder="Enter Message"
                            required autocomplete="off" />
                        <button type="submit" class="btn">Send</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
<script defer>
  $(document).ready(function() {
    var d = $('#chat-panel');
    var username = $('#chat-form').attr('data-bs-name');
    function msgFormater(owner, content) {
        var options = new Array()
        if (owner) {
            options.push('right')
            options.push('justify-content-end')
        } else {
            options.push('left')
            options.push('')
        }
        const msgFormat = [
            `<div class="d-flex ${options.pop()}">`,
            `<div class="chat-bubble chat-bubble--${options.pop()} text-break" style="max-width: 50%;">`,
            `${content}`,
            `</div>`,
            `</div>`,
        ]

        return msgFormat.join('')
    }

    socket.on('livechat:receive', (data) => {
        console.log("msg recieved")
        var owner = data.owner == id
        $('#chat-panel').append( msgFormater(owner, data.msg))
        d.scrollTop(d.prop("scrollHeight"));
    })

    socket.on('livechat:inside', ({id, name}) => {
        $('#chat-panel').append( msgFormater(true, `${name} has joined the chat`))
        let x = true
        socket.emit('livechat:acknowledgement', {id, x, username})
    })

    $('#chat-form').on('submit', function (e) {
      e.preventDefault();
      // Get message text
      let msg = e.target.elements.msg.value;

      msg = msg.trim();

      if (!msg) {
          return false;
      }

      // Emit message to server
      socket.emit('livechat:sent', {id, msg, owner: id});

      // Clear input
      e.target.elements.msg.value = '';
      e.target.elements.msg.focus();
      
    });
  })
</script>